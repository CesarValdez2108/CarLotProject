/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package LoteDeCarros;

import DataManager.*;
import DataManager.Pool.*;
import java.util.Scanner;

public class App {
    public static Scanner lectura = new Scanner(System.in);

    public static void main(String[] args) {
        try {
            int alta = 1;
            // Demostracion altas
            Brand marca = new Brand();
            marca.setBrandName("BMW");
            BrandPool.get().registerComponent(marca);

            Brand marca2 = new Brand();
            marca2.setBrandName("Ferrari");
            BrandPool.get().registerComponent(marca2);

            Model modeloSport = new Model(marca);
            modeloSport.setModelName("300-I");
            ModelPool.get().registerComponent(modeloSport);

            Model modeloCasual = new Model(marca2);
            modeloCasual.setModelName("X5");
            ModelPool.get().registerComponent(modeloCasual);

            Vehicle carro1 = new Vehicle(modeloCasual);
            carro1.setVehicleName("CarroHonda");
            VehiclePool.get().registerComponent(carro1);
            Vehicle carro2 = new Vehicle(modeloCasual);
            carro1.setVehicleName("KirbyCarro");
            VehiclePool.get().registerComponent(carro2);

            do {
                // Menus
                System.out.println("Bienvenido al lote de autos");
                System.out.print(
                        "Ingrese 1 para dar de alta un vehiculo, inserte 2 para dar de baja un vehiculo. Si desea salir ingrese 0: ");
                alta = lectura.nextInt();

                if (alta == 1) {
                    System.out.print("Nombre de la marca a registrar: ");
                    Brand marcaV = new Brand();
                    marca.setBrandName(lectura.next());
                    BrandPool.get().registerComponent(marcaV);

                    System.out.print("Nombre del modelo a registrar: ");
                    Model modeloV = new Model(marca);
                    modeloSport.setModelName(lectura.next());
                    System.out.print("Año del carro a registrar: ");
                    modeloSport.setModelYear(lectura.nextInt());
                    ModelPool.get().registerComponent(modeloV);

                    Vehicle carroV = new Vehicle(modeloV);
                    System.out.print("Nombre del vehiculo a registrar: ");
                    carroV.setVehicleName(lectura.next());
                    System.out.println("Tiene quemacocos: ");
                    carroV.setQuemacocos(lectura.nextBoolean());
                    System.out.println("Numero de puertas del auto: ");
                    carroV.setNumPuertas(lectura.nextInt());
                    System.out.println("Numero de asientos: ");
                    carroV.setAsientos(lectura.nextInt());
                    System.out.println("Capacidad del tanque de gasolina: ");
                    carroV.setGasolina(lectura.nextDouble());
                    System.out.println("Kilometraje del vehiculo: ");
                    carroV.setKilometraje(lectura.nextDouble());
                    VehiclePool.get().registerComponent(carroV);

                    // Marca carro
                    System.out.println("Marca de Carro 1: " +
                            carroV.getModel().getBrand().getBrandName());

                    // Modelo del carro y año
                    System.out.println("Modelo del carro y año del carro: " +
                            carroV.getModel().getModelName() + " "
                            + carroV.getModel().getModelYear());

                    // Caracteristicas del vehiculo
                    System.out.println("Caracteristicas del carro ingresado");
                    System.out.println("Carro ingresado nombre: " + carroV.getVehicleName());
                    System.out.println("Carro ingresado asiento: " + carroV.getAsientos());
                    System.out.println("Carro ingresado quemacocos: " + carroV.getQuemacocos());
                    System.out.println("Carro ingresado puertas: " + carroV.getNumPuertas());
                    System.out.println("Carro ingresado gasolina: " + carroV.getGasolina());
                    System.out.println("Carro ingresado kilometraje: " + carroV.getKilometraje());

                    System.out.println("Elementos totales(Alta): " +
                            BrandPool.get().getComponentAt(0).countChildrenRecurively());
                }

                if (alta == 2) {
                    System.out.println(
                            "Ingrese 1 para eliminar una marca. Ingrese 2 para eliminar un modelo. Ingrese 3 para eliminar un vehiculo: ");

                    switch (lectura.nextInt()) {
                        case 1:
                            System.out.println("¿Que marca desea eliminar? ");
                            for (int i = 0; i < BrandPool.get().countRegisterdComponents(); i++) {
                                var vehicleBrand = (Brand) BrandPool.get().getComponentAt(i);
                                System.out.println(vehicleBrand.getBrandName());
                            }

                            String marcaX = lectura.next();
                            for (int i = 0; i < BrandPool.get().countRegisterdComponents(); i++) {
                                var currentBrand = (Brand) BrandPool.get().getComponentAt(i);
                                if (currentBrand.getBrandName().equals(marcaX)) {
                                    BrandPool.get().unregisterComponent(currentBrand);
                                }
                            }

                            System.out.println("Listo. Estas son las marcas que quedan. ");
                            for (int i = 0; i < BrandPool.get().countRegisterdComponents(); i++) {
                                var vehicleBrand = (Brand) BrandPool.get().getComponentAt(i);
                                System.out.println(vehicleBrand.getBrandName());
                            }
                            break;

                        case 2:
                            System.out.println("¿Que modelo desea eliminar? ");
                            for (int i = 0; i < ModelPool.get().countRegisterdComponents(); i++) {
                                var vehicleModel = (Model) ModelPool.get().getComponentAt(i);
                                System.out.println(vehicleModel.getModelName());
                            }

                            String modeloX = lectura.next();
                            for (int i = 0; i < ModelPool.get().countRegisterdComponents(); i++) {
                                var currentModel = (Model) ModelPool.get().getComponentAt(i);
                                if (currentModel.getModelName().equals(modeloX)) {
                                    ModelPool.get().unregisterComponent(currentModel);
                                }
                            }

                            System.out.println("Listo. Estas son los modelos que quedan ");
                            for (int i = 0; i < ModelPool.get().countRegisterdComponents(); i++) {
                                var vehicleModel = (Model) ModelPool.get().getComponentAt(i);
                                System.out.println(vehicleModel.getModelName());
                            }
                            break;
                        case 3:
                            System.out.println("¿Que vehiculo desea eliminar? ");
                            for (int i = 0; i < VehiclePool.get().countRegisterdComponents(); i++) {
                                var vehicleVehicle = (Vehicle) VehiclePool.get().getComponentAt(i);
                                System.out.println(vehicleVehicle.getVehicleName());
                                // System.out.println(VehiclePool.get().countRegisterdComponents());
                            }

                            String vehiculoX = lectura.next();
                            for (int i = 0; i < VehiclePool.get().countRegisterdComponents(); i++) {
                                var currentVehicle = (Vehicle) VehiclePool.get().getComponentAt(i);
                                if (currentVehicle.getVehicleName().equals(vehiculoX)) {
                                    VehiclePool.get().unregisterComponent(currentVehicle);
                                }
                            }

                            System.out.println("Listo. Estas son los modelos que quedan ");
                            for (int i = 0; i < VehiclePool.get().countRegisterdComponents(); i++) {
                                var vehicleVehicle = (Vehicle) VehiclePool.get().getComponentAt(i);
                                System.out.println(vehicleVehicle.getVehicleName());
                            }
                            break;
                        default:
                            break;
                    }
                }
            } while (alta != 0);

        } catch (ComponentNotBoundToPool ex) {
            System.out.println("Error: " + ex.getMessage());
        }
    }
}
